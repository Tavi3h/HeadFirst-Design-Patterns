该模式定义了对象之间的一对多依赖，这样一来，当一个对象改变状态时，它的所有依赖者都会收到通知并自动更新。
根据通知的风格，观察者可能因此新值而更新。
当两个对象之间松耦合，它们依然可以交互，但是不太清楚彼此的细节。
观察者模式提供了一种对象设计，让主题(Subject)和观察者(Observer)之间松耦合。

weatherStation-UML-P56
java内置的观察者模式下的weatherStation-UML-P64


要点：
1、观察者模式定义了对象之间的一对多关系。
2、主题（Subject即可观察者）用一个共同的接口来更新观察者。
3、观察者和可观察者之间用松耦合的方式结合，可观察者不知道观察者的具体细节，只知道观察者实现了观察者接口。
4、使用此模式时，你可以从被观察者处推（push）或拉（pull）数据。通常推的方式被认为更“正确”。
5、有多个观察者时，不可以依赖特定的通知次序。
6、Java有多种观察者模式的实现，包括通用的java.util.Observable。
7、要注意java.util.Observable实现上所带来的一些问题。
8、如果有必要的话，尽量自己实现观察者模式，不要用java.util.Observable。
9、Swing大量使用观察者模式，许多GUI框架也是如此。
10、此模式也被用在许多地方，比如JavaBeans、RMI（Remote Method Invocation）。