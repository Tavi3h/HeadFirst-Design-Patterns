工厂方法模式(fm)：该模式定义了一个创建对象的接口，但由子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。UML-P134
抽象工厂模式(af)：该模式提供一个接口，用于创建相关或依赖对象的家族，而不需要明确指定具体类。 UML-P156

这两种模式都是将对象创建的过程封装起来，以便将代码从具体类解耦。


把工厂定义为静态方法：
利用静态方法定义一个工厂是很常见的技巧，常被称为静态工厂。
为何使用静态方法？因为不需要使用创建对象的方法来实例化对象。
缺点在于不能通过继承来改变创建方法的行为。


避免在OO设计中违反依赖倒置原则：
（应尽量达到这些原则，而不是随时都遵循这个原则）
1、变量不可以持有具体类的引用。
----如果使用new，就会持有具体类的引用。你可以改用工厂来避开这样的做法。
2、不要让类派生自具体类
----如果派生自具体类，你就会依赖具体类。请派生自一个抽象（抽象类或接口）。
3、不要覆盖基类中已经实现的方法
----如果覆盖已实现的方法，那么你得基类就不是一个真正适合被继承的抽象，基类中已实现的方法，应该由所有子类共享。


要点：
1、所有的工厂都是用来封装对象的创建
2、简单工厂，虽然不是真正的设计模式，但仍不失为一个简单的方法，可以将客户程序从具体类中解耦
3、工厂方法使用继承：把对象的创建委托给子类，子类实现工厂方法来创建对象
4、抽象工厂使用对象组合：对象的创建被实现在工厂接口所暴露出来的方法中
5、所有工厂模式都通过减少应用程序和具体类的依赖促进松耦合
6、工厂方法也允许类将实例化延迟到子类进行
7、抽象工厂创建相关的对象家族，而不需要依赖它们的具体类
8、依赖倒置原则，知道我们避免依赖具体类型，而要尽量依赖抽象
9、工厂是很有威力的技巧，帮助我们针对抽象编程，而不要针对具体类编程